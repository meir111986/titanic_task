Задание: Многоклассовая классификация на данных о цветах ириса
Описание задания
Вам предстоит разработать и обучить модель машинного обучения для классификации цветков ириса на три категории на основе морфологических признаков. Датасет содержит 150 экземпляров цветов ириса с четырьмя признаками и одним целевым классом.

Датасет: Iris Dataset

Целевая переменная:
Целевая переменная представляет вид ириса (класс):

Iris Setosa
Iris Versicolour
Iris Virginica
Признаки для анализа: В датасете содержится следующие признаки:

sepal length — длина чашелистика (см)
sepal width — ширина чашелистика (см)
petal length — длина лепестка (см)
petal width — ширина лепестка (см)
Целевая переменная — это вид ириса (class), для которой требуется предсказать один из трех классов: Iris-setosa, Iris-versicolor, Iris-virginica.

Этапы выполнения задания
Подготовка данных:

Загрузите данные и ознакомьтесь с их структурой.
Проведите очистку данных (если это необходимо).
Проверьте наличие выбросов, а также проверьте данные на наличие пропусков (хотя в данном датасете пропуски отсутствуют).
Разделите выборку на тренировочные и тестовые данные в соотношении 80/20 или 70/30.
Исследовательский анализ данных (EDA):

Выполните визуализацию данных, чтобы понять их распределение.
Постройте парные графики (pairplot) для визуализации зависимости между признаками и классами.
Постройте диаграммы разброса (scatter plot) для исследования взаимосвязи между признаками (например, длина и ширина лепестков и чашелистиков).
Исследуйте корреляции между признаками с помощью корреляционной матрицы.
Обучение моделей:

Обучите несколько моделей машинного обучения для задачи классификации:
Логистическая регрессия
Дерево решении
Используйте кросс-валидацию для оценки производительности моделей.
Оцените качество каждой модели с помощью метрик: точность (accuracy), матрица ошибок, и F1-меры для каждого класса.
Оценка моделей:

Сравните модели между собой на основе точности и F1-меры для каждого класса.
Постройте графики матриц ошибок (confusion matrix) для каждой модели.
Оцените важность признаков для модели, если это возможно (например, для случайного леса или градиентного бустинга).
Подбор гиперпараметров:

Используйте GridSearchCV для подбора оптимальных гиперпараметров для одной из моделей (например, для KNN, SVM или случайного леса).
Финальная модель:

Выберите лучшую модель на основании оценки ее качества (по метрикам точности, F1 и другим).
Сделайте финальные предсказания на тестовом наборе данных.
Оцените производительность модели на тестовой выборке.
Интерпретация результатов:

Объясните, почему та или иная модель показала наилучший результат.
Проведите анализ важности признаков для финальной модели, если это применимо.
Требования к выполнению задания:
Код и комментарии:

Код должен быть чистым и структурированным.
Необходимо добавлять комментарии к каждому этапу работы.
Представление результатов должно быть выполнено в Jupyter Notebook (или аналог).
Технический отчет:

Объясните методологию, которую использовали при подготовке данных, обучении моделей и выборе гиперпараметров.
Опишите, какие методы классификации были использованы и почему.
Приложите визуализации (графики, диаграммы), показывающие анализ данных и результаты работы модели.
Метрики:

Модели должны быть оценены по следующим метрикам: точность (accuracy), F1-score (для каждого класса) и матрица ошибок (confusion matrix).
Обязательно продемонстрируйте процесс кросс-валидации.
Графики и визуализации:

Включите следующие графики:
Pairplot для анализа взаимосвязи признаков.
Матрица корреляции между признаками.
Scatter plot для визуализации распределений по признакам.
Матрицы ошибок для каждой модели.
Размещение на GitHub:

Разместите финальное решение в виде репозитория на GitHub, включающего:
Jupyter Notebook с решением.
README.md с описанием проекта, кратким описанием задачи, используемых моделей, метрик и результатов.
Файл requirements.txt с необходимыми зависимостями для воспроизведения вашего решения.
Дополнительные рекомендации:
Визуализация данных: Включите максимальное количество визуализаций (гистограммы, scatter plot и т.д.) для иллюстрации распределений и взаимосвязей между признаками.
Оценка признаков: Проанализируйте важность каждого признака и объясните, как он влияет на предсказание.
Подбор гиперпараметров: Подбор гиперпараметров должен быть корректным и обоснованным.
Рекомендации по оценке студентов:
Качество моделей: Оцените, насколько тщательно студенты подбирали модели и гиперпараметры, а также какие результаты они получили.
Визуализация данных: Насколько подробно выполнен исследовательский анализ данных (EDA)? Использованы ли соответствующие визуализации?
Чистота кода и комментарии: Присутствуют ли комментарии к коду, насколько понятны шаги, которые выполнены?
Теоретическая часть: Как студенты объясняют выбор моделей, метрик и важность признаков?
